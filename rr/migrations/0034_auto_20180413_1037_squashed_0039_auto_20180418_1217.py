# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-04-19 08:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('rr', '0034_auto_20180413_1037'), ('rr', '0035_auto_20180413_1334'), ('rr', '0036_auto_20180413_1335'), ('rr', '0037_usergroup'), ('rr', '0038_auto_20180416_1200'), ('rr', '0039_auto_20180418_1217')]

    dependencies = [
        ('rr', '0033_auto_20180412_1141'),
    ]

    operations = [
        migrations.AddField(
            model_name='serviceprovider',
            name='local_storage_groups',
            field=models.BooleanField(default=False, verbose_name='Service stores a local copy of groups and group members.'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='local_storage_passwords',
            field=models.BooleanField(default=False, verbose_name='Service stores a local copy of user passwords.'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='local_storage_passwords_info',
            field=models.TextField(blank=True, verbose_name='How is this service storing the saved passwords and why?'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='local_storage_users',
            field=models.BooleanField(default=False, verbose_name='Service stores a local copy of users and their information.'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='server_names',
            field=models.CharField(blank=True, max_length=511, verbose_name='Server names (not IPs), separated with space'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='service_account',
            field=models.BooleanField(default=False, verbose_name='Does the service use a service account?'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='service_account_contact',
            field=models.TextField(blank=True, verbose_name='Email address and phone number for delivering the service account credentials.'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='service_type',
            field=models.CharField(choices=[('saml', 'SAML / Shibboleth'), ('ldap', 'LDAP')], default='saml', max_length=10, verbose_name='Service type (SAML/LDAP)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='target_group',
            field=models.CharField(blank=True, choices=[('internet', 'Internet'), ('university', 'University of Helsinki users'), ('restricted', 'Restricted user group')], max_length=10, verbose_name='Target group for the service'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='entity_id',
            field=models.CharField(blank=True, max_length=255, verbose_name='Entity Id'),
        ),
        migrations.RenameField(
            model_name='attribute',
            old_name='public',
            new_name='public_saml',
        ),
        migrations.AddField(
            model_name='attribute',
            name='group',
            field=models.CharField(blank=True, max_length=255, verbose_name='Attribute Group for LDAP'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='public_ldap',
            field=models.BooleanField(default=True, verbose_name='Show in LDAP attribute list'),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='public_saml',
            field=models.BooleanField(default=True, verbose_name='Show in SAML attribute list'),
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Group name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='Entry end time')),
                ('validated', models.DateTimeField(blank=True, null=True, verbose_name='Validated on')),
                ('sp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rr.ServiceProvider')),
            ],
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='entity_id',
            field=models.CharField(max_length=255, verbose_name='Entity Id'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='local_storage_groups',
            field=models.BooleanField(default=False, verbose_name='Service stores a local copy of groups and group members'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='local_storage_passwords',
            field=models.BooleanField(default=False, verbose_name='Service stores a local copy of user passwords'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='local_storage_users',
            field=models.BooleanField(default=False, verbose_name='Service stores a local copy of users and their information'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='server_names',
            field=models.TextField(blank=True, verbose_name='Server names (not IPs), one per line'),
        ),
        migrations.AlterField(
            model_name='serviceprovider',
            name='service_account_contact',
            field=models.TextField(blank=True, verbose_name='Email address and phone number for delivering the service account credentials'),
        ),
    ]
