stages:
  - test
  - osv-scanner

tests:
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"

  image: python:3.8

  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  cache:
    paths:
      - .cache/pip
      - venv/

  before_script:
    - python -V
    - apt update && apt install -y firefox-esr
    - curl -fL -o /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.31.0/geckodriver-v0.31.0-linux64.tar.gz
    - tar -xzf /tmp/geckodriver.tar.gz -C /tmp/ && chmod +x /tmp/geckodriver && mv /tmp/geckodriver /usr/local/bin/
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - pip install -r requirements/development.txt
    - COVERAGE_FILE=.coverage.unit coverage run ./manage.py test --settings=settings.test
    - COVERAGE_FILE=.coverage.integration coverage run ./manage.py behave --settings=settings.test
    - coverage combine
    - coverage xml
  artifacts:
    expire_in: 2 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

osv-scanner:
  image: golang:latest
  script:
    - go install github.com/google/osv-scanner/cmd/osv-scanner@v1
    - osv-scanner --version
    - osv-scanner --lockfile 'requirements.txt:requirements/development.txt'
